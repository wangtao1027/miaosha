<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--命名空间应该是对应接口的包名+接口名 -->
<mapper namespace="com.imooc.miaosha.dao.ApiDemo">
  <resultMap id="BaseResultMap" type="com.imooc.miaosha.domain.ApiDemoEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_title" jdbcType="VARCHAR" property="goodsTitle" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="goods_status" jdbcType="INTEGER" property="goodsStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.imooc.miaosha.domain.ApiDemoEntity">
    <result column="goods_detail" jdbcType="LONGVARCHAR" property="goodsDetail" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_name, goods_title, goods_img, goods_price, goods_stock, goods_status
  </sql>
  <sql id="Blob_Column_List">
    goods_detail
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.imooc.miaosha.domain.ApiDemoEntity">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_demo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from api_demo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.imooc.miaosha.domain.ApiDemoEntity" useGeneratedKeys="true">
    insert into api_demo (goods_name, goods_title, goods_img,
      goods_price, goods_stock, goods_status,
      goods_detail)
    values (#{goodsName,jdbcType=VARCHAR}, #{goodsTitle,jdbcType=VARCHAR}, #{goodsImg,jdbcType=VARCHAR},
      #{goodsPrice,jdbcType=DECIMAL}, #{goodsStock,jdbcType=INTEGER}, #{goodsStatus,jdbcType=INTEGER},
      #{goodsDetail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.imooc.miaosha.domain.ApiDemoEntity" useGeneratedKeys="true">
    insert into api_demo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsTitle != null">
        goods_title,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsStock != null">
        goods_stock,
      </if>
      <if test="goodsStatus != null">
        goodsStatus,
      </if>
      <if test="goodsDetail != null">
        goods_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="goodsDetail != null">
        #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.miaosha.domain.ApiDemoEntity">
    update api_demo
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        goods_title = #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        goods_stock = #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="goodsStatus != null">
        goodsStatus = #{goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="goodsDetail != null">
        goods_detail = #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imooc.miaosha.domain.ApiDemoEntity">
    update api_demo
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_title = #{goodsTitle,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      goodsStatus = #{goodsStatus,jdbcType=INTEGER},
      goods_detail = #{goodsDetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.miaosha.domain.ApiDemoEntity">
    update api_demo
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_title = #{goodsTitle,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      goodsStatus = #{goodsStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>